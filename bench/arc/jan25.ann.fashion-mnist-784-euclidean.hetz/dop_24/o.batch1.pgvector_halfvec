2025-01-23 15:27:28,405 - annb - INFO - running only pgvector_halfvec
2025-01-23 15:27:28,466 - annb - INFO - Order: [Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 32}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 32}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 64}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 64}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 32, 'efConstruction': 64}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 96}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 96}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 32, 'efConstruction': 96}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 48, 'efConstruction': 96}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 192}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 192}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 32, 'efConstruction': 192}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 48, 'efConstruction': 192}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 64, 'efConstruction': 192}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 256}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 256}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 32, 'efConstruction': 256}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 48, 'efConstruction': 256}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 64, 'efConstruction': 256}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False)]
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 32}])
8 M, 32 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 32)
DDL: table 234 MB in 10.7 seconds, index 117 MB in 16.8 seconds
done!
Built index in 27.69137191772461
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 32}])
16 M, 32 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 32)
DDL: table 234 MB in 10.8 seconds, index 117 MB in 22.9 seconds
done!
Built index in 33.88502883911133
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 64}])
8 M, 64 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 64)
DDL: table 234 MB in 10.7 seconds, index 117 MB in 20.9 seconds
done!
Built index in 31.75941777229309
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 64}])
16 M, 64 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 64)
DDL: table 234 MB in 10.8 seconds, index 117 MB in 28.4 seconds
done!
Built index in 39.38857173919678
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 32, 'efConstruction': 64}])
32 M, 64 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 32, ef_construction = 64)
DDL: table 234 MB in 10.8 seconds, index 156 MB in 50.3 seconds
done!
Built index in 61.3205189704895
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 96}])
8 M, 96 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 96)
DDL: table 234 MB in 10.7 seconds, index 117 MB in 25.1 seconds
done!
Built index in 35.95236849784851
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 96}])
16 M, 96 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 96)
DDL: table 234 MB in 10.8 seconds, index 117 MB in 32.8 seconds
done!
Built index in 43.79302144050598
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 32, 'efConstruction': 96}])
32 M, 96 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 32, ef_construction = 96)
DDL: table 234 MB in 10.6 seconds, index 156 MB in 58.5 seconds
done!
Built index in 69.25921440124512
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 48, 'efConstruction': 96}])
48 M, 96 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 48, ef_construction = 96)
DDL: table 234 MB in 10.7 seconds, index 156 MB in 102.4 seconds
done!
Built index in 113.31180500984192
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 192}])
8 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 192)
DDL: table 234 MB in 10.8 seconds, index 117 MB in 35.2 seconds
done!
Built index in 46.15384030342102
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 192}])
16 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 192)
DDL: table 234 MB in 10.8 seconds, index 117 MB in 45.1 seconds
done!
Built index in 56.104947566986084
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 32, 'efConstruction': 192}])
32 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 32, ef_construction = 192)
DDL: table 234 MB in 10.6 seconds, index 156 MB in 73.4 seconds
done!
Built index in 84.23564863204956
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 48, 'efConstruction': 192}])
48 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 48, ef_construction = 192)
DDL: table 234 MB in 10.8 seconds, index 156 MB in 112.2 seconds
done!
Built index in 123.21197366714478
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 64, 'efConstruction': 192}])
64 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 64, ef_construction = 192)
DDL: table 234 MB in 10.7 seconds, index 156 MB in 194.1 seconds
done!
Built index in 205.04453873634338
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 256}])
8 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 256)
DDL: table 234 MB in 10.8 seconds, index 117 MB in 42.6 seconds
done!
Built index in 53.630370140075684
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 256}])
16 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 256)
DDL: table 234 MB in 10.7 seconds, index 117 MB in 53.9 seconds
done!
Built index in 64.77476382255554
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 32, 'efConstruction': 256}])
32 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 32, ef_construction = 256)
DDL: table 234 MB in 10.7 seconds, index 156 MB in 82.3 seconds
done!
Built index in 93.20383858680725
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 48, 'efConstruction': 256}])
48 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 48, ef_construction = 256)
DDL: table 234 MB in 10.7 seconds, index 156 MB in 121.4 seconds
done!
Built index in 132.3570613861084
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 64, 'efConstruction': 256}])
64 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 24
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 64, ef_construction = 256)
DDL: table 234 MB in 11.0 seconds, index 156 MB in 175.6 seconds
done!
Built index in 186.8192572593689
Index size:  160016.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
2025-01-23 16:09:12,914 - annb - INFO - Terminating 1 workers

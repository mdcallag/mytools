2025-01-23 01:47:00,714 - annb - INFO - running only pgvector_halfvec
2025-01-23 01:47:00,775 - annb - INFO - Order: [Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 32}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 32}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 64}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 64}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 32, 'efConstruction': 64}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 96}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 96}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 32, 'efConstruction': 96}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 48, 'efConstruction': 96}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 192}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 192}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 32, 'efConstruction': 192}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 48, 'efConstruction': 192}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 64, 'efConstruction': 192}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 256}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 256}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 32, 'efConstruction': 256}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 48, 'efConstruction': 256}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 64, 'efConstruction': 256}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False)]
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 32}])
8 M, 32 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 32)
DDL: table 234 MB in 10.6 seconds, index 117 MB in 16.8 seconds
done!
Built index in 27.584444046020508
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 32}])
16 M, 32 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 32)
DDL: table 234 MB in 10.6 seconds, index 117 MB in 23.2 seconds
done!
Built index in 33.94507694244385
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 64}])
8 M, 64 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 64)
DDL: table 234 MB in 10.6 seconds, index 117 MB in 20.7 seconds
done!
Built index in 31.505189418792725
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 64}])
16 M, 64 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 64)
DDL: table 234 MB in 10.7 seconds, index 117 MB in 28.5 seconds
done!
Built index in 39.33831596374512
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 32, 'efConstruction': 64}])
32 M, 64 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 32, ef_construction = 64)
DDL: table 234 MB in 10.6 seconds, index 156 MB in 50.4 seconds
done!
Built index in 61.22154903411865
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 96}])
8 M, 96 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 96)
DDL: table 234 MB in 10.8 seconds, index 117 MB in 24.6 seconds
done!
Built index in 35.61492562294006
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 96}])
16 M, 96 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 96)
DDL: table 234 MB in 10.6 seconds, index 117 MB in 33.0 seconds
done!
Built index in 43.75429129600525
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 32, 'efConstruction': 96}])
32 M, 96 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 32, ef_construction = 96)
DDL: table 234 MB in 10.7 seconds, index 156 MB in 57.6 seconds
done!
Built index in 68.55146169662476
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 48, 'efConstruction': 96}])
48 M, 96 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 48, ef_construction = 96)
DDL: table 234 MB in 10.7 seconds, index 156 MB in 103.2 seconds
done!
Built index in 114.13701462745667
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 192}])
8 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 192)
DDL: table 234 MB in 10.8 seconds, index 117 MB in 35.3 seconds
done!
Built index in 46.29326272010803
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 192}])
16 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 192)
DDL: table 234 MB in 10.9 seconds, index 117 MB in 45.2 seconds
done!
Built index in 56.29032254219055
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 32, 'efConstruction': 192}])
32 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 32, ef_construction = 192)
DDL: table 234 MB in 10.7 seconds, index 156 MB in 72.5 seconds
done!
Built index in 83.42886519432068
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 48, 'efConstruction': 192}])
48 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 48, ef_construction = 192)
DDL: table 234 MB in 11.1 seconds, index 156 MB in 113.5 seconds
done!
Built index in 124.76270365715027
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 64, 'efConstruction': 192}])
64 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 64, ef_construction = 192)
DDL: table 234 MB in 10.7 seconds, index 156 MB in 193.9 seconds
done!
Built index in 204.83119797706604
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 256}])
8 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 256)
DDL: table 234 MB in 10.7 seconds, index 117 MB in 43.3 seconds
done!
Built index in 54.203596353530884
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 256}])
16 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 256)
DDL: table 234 MB in 10.8 seconds, index 117 MB in 54.0 seconds
done!
Built index in 65.05280494689941
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 32, 'efConstruction': 256}])
32 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 32, ef_construction = 256)
DDL: table 234 MB in 10.7 seconds, index 156 MB in 84.5 seconds
done!
Built index in 95.40140652656555
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 48, 'efConstruction': 256}])
48 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 48, ef_construction = 256)
DDL: table 234 MB in 10.7 seconds, index 156 MB in 122.6 seconds
done!
Built index in 133.50243735313416
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 64, 'efConstruction': 256}])
64 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 2
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 64, ef_construction = 256)
DDL: table 234 MB in 10.9 seconds, index 156 MB in 175.0 seconds
done!
Built index in 186.02932810783386
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
2025-01-23 03:22:26,483 - annb - INFO - Terminating 1 workers

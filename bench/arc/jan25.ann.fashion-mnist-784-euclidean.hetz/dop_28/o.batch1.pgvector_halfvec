2025-01-23 17:12:35,217 - annb - INFO - running only pgvector_halfvec
2025-01-23 17:12:35,279 - annb - INFO - Order: [Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 32}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 32}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 64}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 64}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 32, 'efConstruction': 64}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 96}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 96}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 32, 'efConstruction': 96}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 48, 'efConstruction': 96}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 192}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 192}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 32, 'efConstruction': 192}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 48, 'efConstruction': 192}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 64, 'efConstruction': 192}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 256}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 256}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 32, 'efConstruction': 256}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 48, 'efConstruction': 256}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 64, 'efConstruction': 256}], query_argument_groups=[[10], [20], [30], [40], [80], [120], [200], [300], [400]], disabled=False)]
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 32}])
8 M, 32 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 32)
DDL: table 234 MB in 10.5 seconds, index 117 MB in 16.8 seconds
done!
Built index in 27.532800912857056
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 32}])
16 M, 32 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 32)
DDL: table 234 MB in 10.9 seconds, index 117 MB in 22.9 seconds
done!
Built index in 34.03900194168091
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 64}])
8 M, 64 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 64)
DDL: table 234 MB in 10.9 seconds, index 117 MB in 21.1 seconds
done!
Built index in 32.140623807907104
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 64}])
16 M, 64 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 64)
DDL: table 234 MB in 10.6 seconds, index 117 MB in 28.5 seconds
done!
Built index in 39.28784656524658
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 32, 'efConstruction': 64}])
32 M, 64 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 32, ef_construction = 64)
DDL: table 234 MB in 10.7 seconds, index 156 MB in 50.3 seconds
done!
Built index in 61.192132234573364
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 96}])
8 M, 96 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 96)
DDL: table 234 MB in 10.8 seconds, index 117 MB in 25.1 seconds
done!
Built index in 36.04323649406433
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 96}])
16 M, 96 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 96)
DDL: table 234 MB in 10.8 seconds, index 117 MB in 33.0 seconds
done!
Built index in 44.043227434158325
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 32, 'efConstruction': 96}])
32 M, 96 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 32, ef_construction = 96)
DDL: table 234 MB in 10.8 seconds, index 156 MB in 57.6 seconds
done!
Built index in 68.64607334136963
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 48, 'efConstruction': 96}])
48 M, 96 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 48, ef_construction = 96)
DDL: table 234 MB in 10.8 seconds, index 156 MB in 102.7 seconds
done!
Built index in 113.7025294303894
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 192}])
8 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 192)
DDL: table 234 MB in 10.8 seconds, index 117 MB in 35.2 seconds
done!
Built index in 46.23808932304382
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 192}])
16 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 192)
DDL: table 234 MB in 10.6 seconds, index 117 MB in 45.1 seconds
done!
Built index in 55.85816717147827
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 32, 'efConstruction': 192}])
32 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 32, ef_construction = 192)
DDL: table 234 MB in 10.7 seconds, index 156 MB in 72.3 seconds
done!
Built index in 83.12664151191711
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 48, 'efConstruction': 192}])
48 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 48, ef_construction = 192)
DDL: table 234 MB in 10.8 seconds, index 156 MB in 112.2 seconds
done!
Built index in 123.16922545433044
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 64, 'efConstruction': 192}])
64 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 64, ef_construction = 192)
DDL: table 234 MB in 10.7 seconds, index 156 MB in 193.9 seconds
done!
Built index in 204.81081342697144
Index size:  160016.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 256}])
8 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 256)
DDL: table 234 MB in 10.8 seconds, index 117 MB in 42.1 seconds
done!
Built index in 53.11445498466492
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 256}])
16 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 256)
DDL: table 234 MB in 10.7 seconds, index 117 MB in 53.8 seconds
done!
Built index in 64.6605703830719
Index size:  120008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 32, 'efConstruction': 256}])
32 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 32, ef_construction = 256)
DDL: table 234 MB in 10.8 seconds, index 156 MB in 84.0 seconds
done!
Built index in 95.04056596755981
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 48, 'efConstruction': 256}])
48 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 48, ef_construction = 256)
DDL: table 234 MB in 10.7 seconds, index 156 MB in 121.5 seconds
done!
Built index in 132.42990040779114
Index size:  160008.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 64, 'efConstruction': 256}])
64 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 28
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 64, ef_construction = 256)
DDL: table 234 MB in 10.7 seconds, index 156 MB in 177.1 seconds
done!
Built index in 188.00680923461914
Index size:  160016.0
Running query argument group 1 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 2 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 3 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 4 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 5 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 6 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 7 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 8 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
Running query argument group 9 of 9...
Run 1/3...
Run 2/3...
Run 3/3...
2025-01-23 17:53:49,133 - annb - INFO - Terminating 1 workers

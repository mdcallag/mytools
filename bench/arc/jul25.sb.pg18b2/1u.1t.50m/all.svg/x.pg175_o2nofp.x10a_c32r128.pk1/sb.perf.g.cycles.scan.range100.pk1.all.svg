<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="502.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="485" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="485" > </text>
<g id="frames">
<g >
<title>tts_buffer_heap_getsomeattrs (57,752,697 samples, 0.03%)</title><rect x="1006.5" y="213" width="0.4" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1009.51" y="223.5" ></text>
</g>
<g >
<title>bpcharlen (657,060,837 samples, 0.34%)</title><rect x="1173.3" y="229" width="4.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1176.28" y="239.5" ></text>
</g>
<g >
<title>__libc_start_call_main (192,456,347,930 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >__libc_start_call_main</text>
</g>
<g >
<title>pg_utf_mblen_private (95,112,308,161 samples, 49.42%)</title><rect x="400.9" y="197" width="583.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="403.86" y="207.5" >pg_utf_mblen_private</text>
</g>
<g >
<title>LWLockAcquire (35,755,092 samples, 0.02%)</title><rect x="1154.3" y="149" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1157.33" y="159.5" ></text>
</g>
<g >
<title>UnpinBufferNoOwner (189,778,931 samples, 0.10%)</title><rect x="1101.6" y="181" width="1.2" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1104.64" y="191.5" ></text>
</g>
<g >
<title>[postgres] (192,456,347,930 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >[postgres]</text>
</g>
<g >
<title>LWLockRelease (554,298,826 samples, 0.29%)</title><rect x="1156.1" y="149" width="3.4" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1159.08" y="159.5" ></text>
</g>
<g >
<title>tick_sched_timer (88,020,536 samples, 0.05%)</title><rect x="983.4" y="101" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="986.36" y="111.5" ></text>
</g>
<g >
<title>MemoryContextReset (170,522,952 samples, 0.09%)</title><rect x="1188.6" y="245" width="1.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1191.60" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (93,521,614 samples, 0.05%)</title><rect x="983.3" y="117" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="986.32" y="127.5" ></text>
</g>
<g >
<title>slot_getsomeattrs_int (1,646,050,514 samples, 0.86%)</title><rect x="996.4" y="213" width="10.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="999.42" y="223.5" ></text>
</g>
<g >
<title>tick_sched_timer (46,762,597 samples, 0.02%)</title><rect x="400.4" y="101" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="403.40" y="111.5" ></text>
</g>
<g >
<title>PostgresMain (192,456,347,930 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >PostgresMain</text>
</g>
<g >
<title>update_wall_time (22,004,566 samples, 0.01%)</title><rect x="983.4" y="53" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="986.41" y="63.5" ></text>
</g>
<g >
<title>ResourceOwnerForget (30,253,391 samples, 0.02%)</title><rect x="1073.9" y="165" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1076.89" y="175.5" ></text>
</g>
<g >
<title>pgstat_count_io_op (156,763,345 samples, 0.08%)</title><rect x="1172.3" y="165" width="0.9" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1175.25" y="175.5" ></text>
</g>
<g >
<title>PostmasterMain (192,456,347,930 samples, 100.00%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >PostmasterMain</text>
</g>
<g >
<title>GetPrivateRefCountEntry (16,500,860 samples, 0.01%)</title><rect x="1167.9" y="133" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1170.95" y="143.5" ></text>
</g>
<g >
<title>ExecScanFetch (356,755,489 samples, 0.19%)</title><rect x="1006.9" y="229" width="2.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1009.87" y="239.5" ></text>
</g>
<g >
<title>ExecScanFetch (41,249,222 samples, 0.02%)</title><rect x="1188.3" y="245" width="0.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1191.35" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (112,781,504 samples, 0.06%)</title><rect x="983.3" y="181" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="986.27" y="191.5" ></text>
</g>
<g >
<title>task_tick_fair (16,503,926 samples, 0.01%)</title><rect x="983.8" y="37" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="986.78" y="47.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (46,762,597 samples, 0.02%)</title><rect x="400.4" y="117" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="403.40" y="127.5" ></text>
</g>
<g >
<title>tick_sched_handle (38,510,797 samples, 0.02%)</title><rect x="400.5" y="85" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="403.45" y="95.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (68,768,621 samples, 0.04%)</title><rect x="400.4" y="165" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="403.39" y="175.5" ></text>
</g>
<g >
<title>scheduler_tick (38,509,002 samples, 0.02%)</title><rect x="983.6" y="53" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="986.64" y="63.5" ></text>
</g>
<g >
<title>ExecStoreBufferHeapTuple (110,010,950 samples, 0.06%)</title><rect x="1017.4" y="213" width="0.7" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1020.38" y="223.5" ></text>
</g>
<g >
<title>main (192,456,347,930 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >main</text>
</g>
<g >
<title>ReleaseBuffer (77,013,524 samples, 0.04%)</title><rect x="1076.5" y="197" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1079.46" y="207.5" ></text>
</g>
<g >
<title>UnpinBufferNoOwner (341,028,308 samples, 0.18%)</title><rect x="1074.2" y="181" width="2.1" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1077.21" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (33,009,300 samples, 0.02%)</title><rect x="400.5" y="53" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="403.49" y="63.5" ></text>
</g>
<g >
<title>pg_mbstrlen_with_len (19,249,766 samples, 0.01%)</title><rect x="996.3" y="213" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="999.30" y="223.5" ></text>
</g>
<g >
<title>ResourceOwnerForget (16,503,205 samples, 0.01%)</title><rect x="1074.1" y="181" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1077.11" y="191.5" ></text>
</g>
<g >
<title>ReleaseBuffer (68,757,590 samples, 0.04%)</title><rect x="1101.1" y="181" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1104.08" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (55,012,952 samples, 0.03%)</title><rect x="983.5" y="85" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="986.54" y="95.5" ></text>
</g>
<g >
<title>SeqNext (26,247,954,686 samples, 13.64%)</title><rect x="1012.3" y="229" width="161.0" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1015.35" y="239.5" >SeqNext</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (104,524,394 samples, 0.05%)</title><rect x="983.3" y="149" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="986.29" y="159.5" ></text>
</g>
<g >
<title>postmaster_child_launch (192,456,347,930 samples, 100.00%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >postmaster_child_launch</text>
</g>
<g >
<title>tick_do_update_jiffies64 (24,755,279 samples, 0.01%)</title><rect x="983.4" y="69" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="986.39" y="79.5" ></text>
</g>
<g >
<title>heap_page_prune_opt (30,253,680 samples, 0.02%)</title><rect x="1134.6" y="165" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1137.63" y="175.5" ></text>
</g>
<g >
<title>LWLockAcquire (33,002,857 samples, 0.02%)</title><rect x="1133.8" y="165" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1136.79" y="175.5" ></text>
</g>
<g >
<title>BufTableLookup (1,782,158,131 samples, 0.93%)</title><rect x="1143.4" y="149" width="10.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1146.38" y="159.5" ></text>
</g>
<g >
<title>GetPrivateRefCountEntry (123,769,258 samples, 0.06%)</title><rect x="1102.0" y="165" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1105.04" y="175.5" ></text>
</g>
<g >
<title>StartReadBuffer (16,501,697 samples, 0.01%)</title><rect x="1101.5" y="181" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1104.54" y="191.5" ></text>
</g>
<g >
<title>LWLockRelease (162,272,504 samples, 0.08%)</title><rect x="1136.4" y="165" width="1.0" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1139.40" y="175.5" ></text>
</g>
<g >
<title>BufferGetBlockNumber (49,505,252 samples, 0.03%)</title><rect x="1023.2" y="197" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1026.20" y="207.5" ></text>
</g>
<g >
<title>perf_event_task_tick (19,254,885 samples, 0.01%)</title><rect x="983.7" y="37" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="986.66" y="47.5" ></text>
</g>
<g >
<title>hash_bytes (129,874,959 samples, 0.07%)</title><rect x="1171.4" y="165" width="0.8" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1174.42" y="175.5" ></text>
</g>
<g >
<title>heapgettup_pagemode (15,648,698,711 samples, 8.13%)</title><rect x="1077.3" y="197" width="95.9" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1080.28" y="207.5" >heapgettup_..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (55,014,692 samples, 0.03%)</title><rect x="400.4" y="149" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="403.40" y="159.5" ></text>
</g>
<g >
<title>ExecInterpExpr (88,011,001 samples, 0.05%)</title><rect x="10.0" y="245" width="0.5" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>pg_detoast_datum_packed (1,654,522,034 samples, 0.86%)</title><rect x="986.2" y="213" width="10.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="989.16" y="223.5" ></text>
</g>
<g >
<title>LockBuffer (41,253,111 samples, 0.02%)</title><rect x="1100.8" y="181" width="0.3" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="1103.83" y="191.5" ></text>
</g>
<g >
<title>heap_getnextslot (968,130,900 samples, 0.50%)</title><rect x="1177.3" y="229" width="5.9" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1180.31" y="239.5" ></text>
</g>
<g >
<title>pg_database_encoding_max_length (349,286,486 samples, 0.18%)</title><rect x="984.0" y="213" width="2.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="987.02" y="223.5" ></text>
</g>
<g >
<title>read_stream_next_buffer (6,253,724,939 samples, 3.25%)</title><rect x="1134.9" y="181" width="38.3" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1137.89" y="191.5" >rea..</text>
</g>
<g >
<title>hrtimer_interrupt (52,263,753 samples, 0.03%)</title><rect x="400.4" y="133" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="403.40" y="143.5" ></text>
</g>
<g >
<title>SeqNext (55,007,577 samples, 0.03%)</title><rect x="1189.6" y="245" width="0.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1192.65" y="255.5" ></text>
</g>
<g >
<title>tts_buffer_heap_getsomeattrs (1,449,403,431 samples, 0.75%)</title><rect x="997.6" y="197" width="8.9" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1000.63" y="207.5" ></text>
</g>
<g >
<title>ResourceOwnerRemember (35,755,795 samples, 0.02%)</title><rect x="1076.9" y="197" width="0.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1079.93" y="207.5" ></text>
</g>
<g >
<title>MemoryContextReset (537,032,106 samples, 0.28%)</title><rect x="1009.1" y="229" width="3.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1012.05" y="239.5" ></text>
</g>
<g >
<title>LWLockRelease (123,763,094 samples, 0.06%)</title><rect x="1100.1" y="181" width="0.7" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1103.07" y="191.5" ></text>
</g>
<g >
<title>update_process_times (52,262,252 samples, 0.03%)</title><rect x="983.6" y="69" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="986.56" y="79.5" ></text>
</g>
<g >
<title>PinBuffer (1,397,336,407 samples, 0.73%)</title><rect x="1159.5" y="149" width="8.5" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1162.48" y="159.5" ></text>
</g>
<g >
<title>ServerLoop (192,456,347,930 samples, 100.00%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >ServerLoop</text>
</g>
<g >
<title>heap_getnextslot (25,316,933,697 samples, 13.15%)</title><rect x="1018.1" y="213" width="155.2" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1021.05" y="223.5" >heap_getnextslot</text>
</g>
<g >
<title>IncrBufferRefCount (121,018,220 samples, 0.06%)</title><rect x="1073.0" y="181" width="0.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1076.02" y="191.5" ></text>
</g>
<g >
<title>ExecStoreBufferHeapTuple (8,613,915,499 samples, 4.48%)</title><rect x="1023.5" y="197" width="52.8" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1026.51" y="207.5" >ExecS..</text>
</g>
<g >
<title>slot_getsomeattrs_int (88,016,060 samples, 0.05%)</title><rect x="1187.8" y="229" width="0.5" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1190.81" y="239.5" ></text>
</g>
<g >
<title>PortalRun (192,453,597,398 samples, 100.00%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="13.00" y="303.5" >PortalRun</text>
</g>
<g >
<title>pg_mbstrlen_with_len (41,359,708,211 samples, 21.49%)</title><rect x="147.3" y="197" width="253.6" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="150.27" y="207.5" >pg_mbstrlen_with_len</text>
</g>
<g >
<title>GetPrivateRefCountEntry (112,752,231 samples, 0.06%)</title><rect x="1075.6" y="165" width="0.7" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1078.61" y="175.5" ></text>
</g>
<g >
<title>timekeeping_advance (16,503,379 samples, 0.01%)</title><rect x="983.4" y="37" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="986.44" y="47.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (27,506,127 samples, 0.01%)</title><rect x="983.4" y="85" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="986.37" y="95.5" ></text>
</g>
<g >
<title>update_process_times (35,759,901 samples, 0.02%)</title><rect x="400.5" y="69" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="403.47" y="79.5" ></text>
</g>
<g >
<title>hash_search_with_hash_value (1,768,405,722 samples, 0.92%)</title><rect x="1143.5" y="133" width="10.8" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1146.47" y="143.5" ></text>
</g>
<g >
<title>LWLockAttemptLock (90,759,566 samples, 0.05%)</title><rect x="1134.0" y="165" width="0.5" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1136.99" y="175.5" ></text>
</g>
<g >
<title>standard_ExecutorRun (192,453,597,398 samples, 100.00%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >standard_ExecutorRun</text>
</g>
<g >
<title>ResourceOwnerRemember (522,620,920 samples, 0.27%)</title><rect x="1168.2" y="149" width="3.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1171.17" y="159.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (99,022,940 samples, 0.05%)</title><rect x="983.3" y="133" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="986.32" y="143.5" ></text>
</g>
<g >
<title>GetPrivateRefCountEntry (57,757,035 samples, 0.03%)</title><rect x="1073.3" y="165" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1076.29" y="175.5" ></text>
</g>
<g >
<title>LWLockAttemptLock (250,275,496 samples, 0.13%)</title><rect x="1154.5" y="149" width="1.6" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1157.55" y="159.5" ></text>
</g>
<g >
<title>postgres (192,456,347,930 samples, 100.00%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >postgres</text>
</g>
<g >
<title>exec_simple_query (192,453,597,398 samples, 100.00%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >exec_simple_query</text>
</g>
<g >
<title>all (192,456,347,930 samples, 100%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>int4lt (744,409,632 samples, 0.39%)</title><rect x="1183.2" y="229" width="4.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1186.24" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (74,269,532 samples, 0.04%)</title><rect x="400.4" y="181" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="403.35" y="191.5" ></text>
</g>
<g >
<title>ResourceOwnerForget (30,254,541 samples, 0.02%)</title><rect x="1101.3" y="165" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1104.32" y="175.5" ></text>
</g>
<g >
<title>StartReadBuffer (5,527,024,423 samples, 2.87%)</title><rect x="1137.5" y="165" width="33.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1140.50" y="175.5" >St..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (110,030,877 samples, 0.06%)</title><rect x="983.3" y="165" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="986.29" y="175.5" ></text>
</g>
<g >
<title>ReleaseBuffer (52,256,727 samples, 0.03%)</title><rect x="1073.8" y="181" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1076.76" y="191.5" ></text>
</g>
<g >
<title>heap_prepare_pagescan (19,252,849 samples, 0.01%)</title><rect x="1077.2" y="197" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1080.16" y="207.5" ></text>
</g>
<g >
<title>bpcharlen (146,533,027,914 samples, 76.14%)</title><rect x="85.6" y="213" width="898.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="88.58" y="223.5" >bpcharlen</text>
</g>
<g >
<title>PortalRunSelect (192,453,597,398 samples, 100.00%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="13.00" y="287.5" >PortalRunSelect</text>
</g>
<g >
<title>ExecScan (192,098,806,646 samples, 99.81%)</title><rect x="10.5" y="245" width="1177.8" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="13.54" y="255.5" >ExecScan</text>
</g>
<g >
<title>ExecInterpExpr (161,615,616,718 samples, 83.98%)</title><rect x="16.0" y="229" width="990.9" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="18.96" y="239.5" >ExecInterpExpr</text>
</g>
<g >
<title>ResourceOwnerEnlarge (19,254,315 samples, 0.01%)</title><rect x="1073.6" y="165" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1076.64" y="175.5" ></text>
</g>
<g >
<title>heap_prepare_pagescan (5,210,731,364 samples, 2.71%)</title><rect x="1102.9" y="181" width="31.9" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1105.87" y="191.5" >he..</text>
</g>
</g>
</svg>

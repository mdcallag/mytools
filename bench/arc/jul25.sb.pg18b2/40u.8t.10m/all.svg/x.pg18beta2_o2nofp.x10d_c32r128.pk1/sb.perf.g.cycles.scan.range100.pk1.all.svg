<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="502" onload="init(evt)" viewBox="0 0 1200 502" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="502.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="485" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="485" > </text>
<g id="frames">
<g >
<title>heap_prepare_pagescan (5,196,693,559 samples, 2.69%)</title><rect x="1100.0" y="181" width="31.7" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1102.99" y="191.5" >he..</text>
</g>
<g >
<title>LWLockRelease (250,245,147 samples, 0.13%)</title><rect x="1096.2" y="181" width="1.6" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1099.24" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (90,746,595 samples, 0.05%)</title><rect x="990.9" y="181" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="993.87" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (19,248,538 samples, 0.01%)</title><rect x="1041.2" y="181" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1044.21" y="191.5" ></text>
</g>
<g >
<title>GetPrivateRefCountEntry (19,250,046 samples, 0.01%)</title><rect x="1075.6" y="165" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1078.60" y="175.5" ></text>
</g>
<g >
<title>ResourceOwnerForget (35,750,939 samples, 0.02%)</title><rect x="1076.9" y="165" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1079.89" y="175.5" ></text>
</g>
<g >
<title>ResourceOwnerEnlarge (30,251,622 samples, 0.02%)</title><rect x="1173.2" y="149" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1176.20" y="159.5" ></text>
</g>
<g >
<title>tts_buffer_heap_getsomeattrs (1,055,957,938 samples, 0.55%)</title><rect x="1041.3" y="213" width="6.5" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1044.32" y="223.5" ></text>
</g>
<g >
<title>pg_database_encoding_max_length (159,502,658 samples, 0.08%)</title><rect x="991.5" y="213" width="0.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="994.46" y="223.5" ></text>
</g>
<g >
<title>MemoryContextReset (1,242,926,515 samples, 0.64%)</title><rect x="1047.8" y="229" width="7.6" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1050.78" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (49,503,205 samples, 0.03%)</title><rect x="991.0" y="101" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="994.04" y="111.5" ></text>
</g>
<g >
<title>GetPrivateRefCountEntry (136,125,649 samples, 0.07%)</title><rect x="1172.2" y="133" width="0.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1175.19" y="143.5" ></text>
</g>
<g >
<title>[postgres] (193,103,775,188 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(245,184,44)" rx="2" ry="2" />
<text  x="13.02" y="351.5" >[postgres]</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (63,258,095 samples, 0.03%)</title><rect x="399.4" y="149" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="402.37" y="159.5" ></text>
</g>
<g >
<title>hash_search_with_hash_value (1,748,614,579 samples, 0.91%)</title><rect x="1141.2" y="133" width="10.7" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1144.18" y="143.5" ></text>
</g>
<g >
<title>LWLockRelease (16,500,603 samples, 0.01%)</title><rect x="1133.1" y="165" width="0.1" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1136.14" y="175.5" ></text>
</g>
<g >
<title>SeqNext (110,850,652 samples, 0.06%)</title><rect x="1189.3" y="245" width="0.7" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1192.29" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (19,248,538 samples, 0.01%)</title><rect x="1041.2" y="149" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1044.21" y="159.5" ></text>
</g>
<g >
<title>scheduler_tick (27,501,435 samples, 0.01%)</title><rect x="991.2" y="53" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="994.17" y="63.5" ></text>
</g>
<g >
<title>ReleaseBuffer (198,002,394 samples, 0.10%)</title><rect x="1098.1" y="181" width="1.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1101.10" y="191.5" ></text>
</g>
<g >
<title>IncrBufferRefCount (79,751,070 samples, 0.04%)</title><rect x="1075.3" y="181" width="0.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1078.35" y="191.5" ></text>
</g>
<g >
<title>LockBuffer (55,000,492 samples, 0.03%)</title><rect x="1097.8" y="181" width="0.3" height="15.0" fill="rgb(235,142,34)" rx="2" ry="2" />
<text  x="1100.77" y="191.5" ></text>
</g>
<g >
<title>PortalRunSelect (193,098,275,070 samples, 100.00%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="13.02" y="287.5" >PortalRunSelect</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (16,501,584 samples, 0.01%)</title><rect x="86.0" y="181" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="89.01" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (63,254,403 samples, 0.03%)</title><rect x="991.0" y="133" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="994.00" y="143.5" ></text>
</g>
<g >
<title>PortalRun (193,098,275,070 samples, 100.00%)</title><rect x="10.0" y="293" width="1180.0" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="13.02" y="303.5" >PortalRun</text>
</g>
<g >
<title>ResourceOwnerForget (38,499,291 samples, 0.02%)</title><rect x="1099.1" y="165" width="0.2" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1102.08" y="175.5" ></text>
</g>
<g >
<title>ExecInterpExpr (401,475,403 samples, 0.21%)</title><rect x="10.0" y="245" width="2.5" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="13.02" y="255.5" ></text>
</g>
<g >
<title>exec_simple_query (193,103,775,188 samples, 100.00%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="13.02" y="319.5" >exec_simple_query</text>
</g>
<g >
<title>pg_detoast_datum_packed (184,344,098 samples, 0.10%)</title><rect x="992.4" y="213" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="995.43" y="223.5" ></text>
</g>
<g >
<title>__memcmp_evex_movbe (24,748,617 samples, 0.01%)</title><rect x="1141.0" y="133" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1144.03" y="143.5" ></text>
</g>
<g >
<title>ExecStoreBufferHeapTuple (159,500,996 samples, 0.08%)</title><rect x="1060.9" y="213" width="0.9" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1063.87" y="223.5" ></text>
</g>
<g >
<title>heap_page_prune_opt (27,501,483 samples, 0.01%)</title><rect x="1131.6" y="165" width="0.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1134.57" y="175.5" ></text>
</g>
<g >
<title>slot_getsomeattrs_int (104,498,174 samples, 0.05%)</title><rect x="1186.0" y="229" width="0.6" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1188.98" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (77,011,398 samples, 0.04%)</title><rect x="399.3" y="181" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="402.34" y="191.5" ></text>
</g>
<g >
<title>ServerLoop (193,103,775,188 samples, 100.00%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="13.02" y="383.5" >ServerLoop</text>
</g>
<g >
<title>ExecStoreBufferHeapTuple (1,402,512,409 samples, 0.73%)</title><rect x="1070.7" y="197" width="8.6" height="15.0" fill="rgb(230,117,28)" rx="2" ry="2" />
<text  x="1073.71" y="207.5" ></text>
</g>
<g >
<title>tick_sched_timer (16,498,286 samples, 0.01%)</title><rect x="1041.2" y="101" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1044.22" y="111.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (74,236,089 samples, 0.04%)</title><rect x="990.9" y="149" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="993.94" y="159.5" ></text>
</g>
<g >
<title>postgres (193,106,525,241 samples, 100.00%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="13.00" y="447.5" >postgres</text>
</g>
<g >
<title>__libc_start_call_main (193,103,775,188 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.02" y="431.5" >__libc_start_call_main</text>
</g>
<g >
<title>all (193,106,525,241 samples, 100%)</title><rect x="10.0" y="453" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>ResourceOwnerRemember (16,501,499 samples, 0.01%)</title><rect x="1173.4" y="149" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1176.39" y="159.5" ></text>
</g>
<g >
<title>main (193,103,775,188 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.02" y="415.5" >main</text>
</g>
<g >
<title>BufTableLookup (1,773,363,196 samples, 0.92%)</title><rect x="1141.0" y="149" width="10.9" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1144.03" y="159.5" ></text>
</g>
<g >
<title>pgstat_count_io_op (77,002,934 samples, 0.04%)</title><rect x="1175.0" y="165" width="0.5" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1178.00" y="175.5" ></text>
</g>
<g >
<title>heapgettup_pagemode (16,506,544 samples, 0.01%)</title><rect x="1175.6" y="213" width="0.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1178.62" y="223.5" ></text>
</g>
<g >
<title>update_process_times (44,002,967 samples, 0.02%)</title><rect x="991.1" y="69" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="994.07" y="79.5" ></text>
</g>
<g >
<title>ReleaseBuffer (209,010,907 samples, 0.11%)</title><rect x="1075.8" y="181" width="1.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1078.83" y="191.5" ></text>
</g>
<g >
<title>pg_utf_mblen_private (96,817,267,039 samples, 50.14%)</title><rect x="399.8" y="197" width="591.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="402.85" y="207.5" >pg_utf_mblen_private</text>
</g>
<g >
<title>task_tick_fair (22,001,796 samples, 0.01%)</title><rect x="399.5" y="37" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="402.52" y="47.5" ></text>
</g>
<g >
<title>standard_ExecutorRun (193,098,275,070 samples, 100.00%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(247,196,47)" rx="2" ry="2" />
<text  x="13.02" y="271.5" >standard_ExecutorRun</text>
</g>
<g >
<title>scheduler_tick (44,005,531 samples, 0.02%)</title><rect x="399.4" y="53" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="402.40" y="63.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (19,248,538 samples, 0.01%)</title><rect x="1041.2" y="117" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1044.21" y="127.5" ></text>
</g>
<g >
<title>tick_sched_handle (16,498,286 samples, 0.01%)</title><rect x="1041.2" y="85" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1044.22" y="95.5" ></text>
</g>
<g >
<title>postmaster_child_launch (193,103,775,188 samples, 100.00%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="13.02" y="367.5" >postmaster_child_launch</text>
</g>
<g >
<title>ResourceOwnerRemember (21,998,115 samples, 0.01%)</title><rect x="1079.9" y="197" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1082.88" y="207.5" ></text>
</g>
<g >
<title>LWLockAcquire (88,001,519 samples, 0.05%)</title><rect x="1129.8" y="165" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1132.84" y="175.5" ></text>
</g>
<g >
<title>GetPrivateRefCountEntry (41,248,906 samples, 0.02%)</title><rect x="1099.7" y="165" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1102.67" y="175.5" ></text>
</g>
<g >
<title>bpcharlen (148,160,360,113 samples, 76.72%)</title><rect x="86.1" y="213" width="905.4" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="89.11" y="223.5" >bpcharlen</text>
</g>
<g >
<title>PostmasterMain (193,103,775,188 samples, 100.00%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.02" y="399.5" >PostmasterMain</text>
</g>
<g >
<title>__hrtimer_run_queues (46,755,856 samples, 0.02%)</title><rect x="399.4" y="117" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="402.39" y="127.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (74,260,803 samples, 0.04%)</title><rect x="399.4" y="165" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="402.35" y="175.5" ></text>
</g>
<g >
<title>SeqNext (19,695,528,846 samples, 10.20%)</title><rect x="1055.4" y="229" width="120.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="1058.37" y="239.5" >SeqNext</text>
</g>
<g >
<title>ExecSeqScanWithQual (192,148,725,216 samples, 99.50%)</title><rect x="12.5" y="245" width="1174.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="15.47" y="255.5" >ExecSeqScanWithQual</text>
</g>
<g >
<title>ResourceOwnerForget (30,209,730 samples, 0.02%)</title><rect x="1077.2" y="181" width="0.1" height="15.0" fill="rgb(235,142,33)" rx="2" ry="2" />
<text  x="1080.16" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (16,501,584 samples, 0.01%)</title><rect x="86.0" y="213" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="89.01" y="223.5" ></text>
</g>
<g >
<title>heap_getnextslot (759,175,655 samples, 0.39%)</title><rect x="1177.8" y="229" width="4.6" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1180.77" y="239.5" ></text>
</g>
<g >
<title>pgstat_count_backend_io_op (38,501,530 samples, 0.02%)</title><rect x="1173.5" y="149" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1176.49" y="159.5" ></text>
</g>
<g >
<title>LWLockAttemptLock (987,196,386 samples, 0.51%)</title><rect x="1152.0" y="149" width="6.0" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1154.98" y="159.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (55,003,580 samples, 0.03%)</title><rect x="991.0" y="117" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="994.00" y="127.5" ></text>
</g>
<g >
<title>heap_prepare_pagescan (55,001,003 samples, 0.03%)</title><rect x="1080.1" y="197" width="0.4" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1083.12" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (57,757,508 samples, 0.03%)</title><rect x="399.4" y="133" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="402.39" y="143.5" ></text>
</g>
<g >
<title>tts_buffer_heap_getsomeattrs (6,078,766,701 samples, 3.15%)</title><rect x="1004.2" y="197" width="37.1" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="1007.18" y="207.5" >tts..</text>
</g>
<g >
<title>tick_sched_handle (44,005,531 samples, 0.02%)</title><rect x="399.4" y="85" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="402.40" y="95.5" ></text>
</g>
<g >
<title>ReleaseBuffer (68,754,136 samples, 0.04%)</title><rect x="1079.5" y="197" width="0.4" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1082.46" y="207.5" ></text>
</g>
<g >
<title>GetPrivateRefCountEntry (24,741,748 samples, 0.01%)</title><rect x="1079.1" y="165" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1082.13" y="175.5" ></text>
</g>
<g >
<title>int4lt (583,745,750 samples, 0.30%)</title><rect x="1182.4" y="229" width="3.6" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1185.41" y="239.5" ></text>
</g>
<g >
<title>StartReadBuffer (6,617,401,948 samples, 3.43%)</title><rect x="1133.4" y="165" width="40.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1136.37" y="175.5" >Sta..</text>
</g>
<g >
<title>bpcharlen (327,136,960 samples, 0.17%)</title><rect x="1175.8" y="229" width="2.0" height="15.0" fill="rgb(221,77,18)" rx="2" ry="2" />
<text  x="1178.77" y="239.5" ></text>
</g>
<g >
<title>MemoryContextReset (437,223,799 samples, 0.23%)</title><rect x="1186.6" y="245" width="2.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="1189.62" y="255.5" ></text>
</g>
<g >
<title>ResourceOwnerEnlarge (19,248,875 samples, 0.01%)</title><rect x="1075.7" y="165" width="0.1" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1078.72" y="175.5" ></text>
</g>
<g >
<title>pg_mbstrlen_with_len (46,639,976,680 samples, 24.15%)</title><rect x="114.8" y="197" width="285.0" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="117.85" y="207.5" >pg_mbstrlen_with_len</text>
</g>
<g >
<title>heapgettup_pagemode (15,562,959,698 samples, 8.06%)</title><rect x="1080.5" y="197" width="95.1" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="1083.46" y="207.5" >heapgettup_..</text>
</g>
<g >
<title>slot_getsomeattrs_int (7,747,871,742 samples, 4.01%)</title><rect x="994.0" y="213" width="47.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="996.98" y="223.5" >slot..</text>
</g>
<g >
<title>LWLockAttemptLock (192,524,381 samples, 0.10%)</title><rect x="1130.4" y="165" width="1.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1133.38" y="175.5" ></text>
</g>
<g >
<title>tick_sched_timer (46,755,856 samples, 0.02%)</title><rect x="399.4" y="101" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="402.39" y="111.5" ></text>
</g>
<g >
<title>BufferGetBlockNumber (231,641,693 samples, 0.12%)</title><rect x="1069.3" y="197" width="1.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1072.29" y="207.5" ></text>
</g>
<g >
<title>UnpinBufferNoOwner (316,263,804 samples, 0.16%)</title><rect x="1077.3" y="181" width="2.0" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1080.35" y="191.5" ></text>
</g>
<g >
<title>LWLockRelease (310,753,859 samples, 0.16%)</title><rect x="1158.0" y="149" width="1.9" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1161.02" y="159.5" ></text>
</g>
<g >
<title>tick_sched_handle (46,752,902 samples, 0.02%)</title><rect x="991.1" y="85" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="994.05" y="95.5" ></text>
</g>
<g >
<title>pg_mbstrlen_with_len (68,752,311 samples, 0.04%)</title><rect x="993.6" y="213" width="0.4" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="996.56" y="223.5" ></text>
</g>
<g >
<title>ExecInterpExpr (167,767,757,404 samples, 86.88%)</title><rect x="22.6" y="229" width="1025.2" height="15.0" fill="rgb(225,96,22)" rx="2" ry="2" />
<text  x="25.61" y="239.5" >ExecInterpExpr</text>
</g>
<g >
<title>hrtimer_interrupt (19,248,538 samples, 0.01%)</title><rect x="1041.2" y="133" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1044.21" y="143.5" ></text>
</g>
<g >
<title>PinBuffer (2,144,173,767 samples, 1.11%)</title><rect x="1159.9" y="149" width="13.1" height="15.0" fill="rgb(219,64,15)" rx="2" ry="2" />
<text  x="1162.92" y="159.5" ></text>
</g>
<g >
<title>hash_bytes (178,659,211 samples, 0.09%)</title><rect x="1173.9" y="165" width="1.1" height="15.0" fill="rgb(227,102,24)" rx="2" ry="2" />
<text  x="1176.86" y="175.5" ></text>
</g>
<g >
<title>heap_getnextslot (18,617,561,186 samples, 9.64%)</title><rect x="1061.9" y="213" width="113.7" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1064.86" y="223.5" >heap_getnextslot</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (79,745,544 samples, 0.04%)</title><rect x="990.9" y="165" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="993.94" y="175.5" ></text>
</g>
<g >
<title>update_process_times (44,005,531 samples, 0.02%)</title><rect x="399.4" y="69" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="402.40" y="79.5" ></text>
</g>
<g >
<title>UnpinBufferNoOwner (90,751,444 samples, 0.05%)</title><rect x="1099.4" y="181" width="0.5" height="15.0" fill="rgb(253,221,53)" rx="2" ry="2" />
<text  x="1102.36" y="191.5" ></text>
</g>
<g >
<title>PostgresMain (193,103,775,188 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="13.02" y="335.5" >PostgresMain</text>
</g>
<g >
<title>read_stream_next_buffer (7,167,311,632 samples, 3.71%)</title><rect x="1131.8" y="181" width="43.8" height="15.0" fill="rgb(216,50,12)" rx="2" ry="2" />
<text  x="1134.76" y="191.5" >read..</text>
</g>
<g >
<title>ReservePrivateRefCountEntry (30,251,241 samples, 0.02%)</title><rect x="1173.0" y="149" width="0.2" height="15.0" fill="rgb(232,125,30)" rx="2" ry="2" />
<text  x="1176.02" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (19,248,538 samples, 0.01%)</title><rect x="1041.2" y="165" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1044.21" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (16,501,584 samples, 0.01%)</title><rect x="86.0" y="197" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="89.01" y="207.5" ></text>
</g>
</g>
</svg>

2025-01-12 17:24:05,817 - annb - INFO - running only pgvector_halfvec
Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

Found ann_benchmarks.algorithms.pgvector

2025-01-12 17:24:05,862 - annb - INFO - Order: [Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 48, 'efConstruction': 192}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 32, 'efConstruction': 64}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 96}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 256}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 32, 'efConstruction': 192}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 32}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 64}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 64, 'efConstruction': 256}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 96}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 48, 'efConstruction': 256}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 64}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 256}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 32}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 8, 'efConstruction': 192}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 32, 'efConstruction': 256}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 32, 'efConstruction': 96}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 48, 'efConstruction': 96}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 16, 'efConstruction': 192}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False), Definition(algorithm='pgvector_halfvec', constructor='PGVector_halfvec', module='ann_benchmarks.algorithms.pgvector', docker_tag='ann-benchmarks-pgvector-halfvec', arguments=['euclidean', {'M': 64, 'efConstruction': 192}], query_argument_groups=[[10], [20], [40], [80], [120], [200], [400], [800]], disabled=False)]
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 48, 'efConstruction': 192}])
48 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 48, ef_construction = 192)
Size is 156 MB
done!
Built index in 343.12826347351074
Index size:  160008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 32, 'efConstruction': 64}])
32 M, 64 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 32, ef_construction = 64)
Size is 156 MB
done!
Built index in 142.6671323776245
Index size:  160008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 96}])
16 M, 96 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 96)
Size is 117 MB
done!
Built index in 59.23262906074524
Index size:  120008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 256}])
8 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 256)
Size is 117 MB
done!
Built index in 57.04054880142212
Index size:  120008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 32, 'efConstruction': 192}])
32 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 32, ef_construction = 192)
Size is 156 MB
done!
Built index in 179.08743834495544
Index size:  160008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 32}])
16 M, 32 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 32)
Size is 117 MB
done!
Built index in 44.48229122161865
Index size:  120008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 64}])
8 M, 64 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 64)
Size is 117 MB
done!
Built index in 28.649641036987305
Index size:  120008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 64, 'efConstruction': 256}])
64 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 64, ef_construction = 256)
Size is 156 MB
done!
Built index in 597.9006879329681
Index size:  160008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 96}])
8 M, 96 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 96)
Size is 117 MB
done!
Built index in 33.84840512275696
Index size:  120008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 48, 'efConstruction': 256}])
48 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 48, ef_construction = 256)
Size is 156 MB
done!
Built index in 362.566339969635
Index size:  160008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 64}])
16 M, 64 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 64)
Size is 117 MB
done!
Built index in 52.67789363861084
Index size:  120008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 256}])
16 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 256)
Size is 117 MB
done!
Built index in 90.09262037277222
Index size:  120008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 32}])
8 M, 32 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 32)
Size is 117 MB
done!
Built index in 22.979416370391846
Index size:  120008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 8, 'efConstruction': 192}])
8 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 8, ef_construction = 192)
Size is 117 MB
done!
Built index in 47.96035552024841
Index size:  120008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 32, 'efConstruction': 256}])
32 M, 256 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 32, ef_construction = 256)
Size is 156 MB
done!
Built index in 195.3543574810028
Index size:  160008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 32, 'efConstruction': 96}])
32 M, 96 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 32, ef_construction = 96)
Size is 156 MB
done!
Built index in 154.0261480808258
Index size:  160008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 48, 'efConstruction': 96}])
48 M, 96 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 48, ef_construction = 96)
Size is 156 MB
done!
Built index in 312.6924891471863
Index size:  160008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 16, 'efConstruction': 192}])
16 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 16, ef_construction = 192)
Size is 117 MB
done!
Built index in 78.54451489448547
Index size:  120008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Trying to instantiate ann_benchmarks.algorithms.pgvector.PGVector_halfvec(['euclidean', {'M': 64, 'efConstruction': 192}])
64 M, 192 efConstruction, euclidean metric
Postgres concurrency for --batch is 8
Postgres database name is ib
Got a train set of size (60000 * 784)
Got 10000 queries
Query is: SELECT id FROM items ORDER BY embedding::halfvec(784) <-> %s::halfvec(784) LIMIT %s
copying data...
creating index as CREATE INDEX ON items USING hnsw ((embedding::halfvec(784)) halfvec_l2_ops)
                      WITH (m = 64, ef_construction = 192)
Size is 156 MB
done!
Built index in 583.0210411548615
Index size:  160008.0
Running query argument group 1 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 2 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 3 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 4 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 5 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 6 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 7 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
Running query argument group 8 of 8...
Run 1/5...
Run 2/5...
Run 3/5...
Run 4/5...
Run 5/5...
2025-01-12 19:02:45,247 - annb - INFO - Terminating 1 workers
